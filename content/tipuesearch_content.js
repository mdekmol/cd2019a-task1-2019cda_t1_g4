var tipuesearch = {"pages": [{'title': '簡介', 'text': 'ag4倉儲 \n 組員 \n blogger \n', 'tags': '', 'url': '簡介.html'}, {'title': '組員', 'text': '40623102  吳柔燕\xa0 \xa0 \xa0 \xa0 \xa0\xa0 40623124  葉修宏 \n 40623110  翁俊揚\xa0 \xa0 \xa0 \xa0 \xa0\xa0 40623132  趙家傑 \n 40623111  王映捷\xa0 \xa0 \xa0 \xa0 \xa0\xa0 40623144  林昭權 \n 40623113  吳承哲\xa0 \xa0 \xa0 \xa0 \xa0\xa0 40623152  潘季宏 \n 40623121  蔡朝旭\xa0 \xa0 \xa0 \xa0 \xa0\xa0 40623157  李昀霖 \n \n', 'tags': '', 'url': '組員.html'}, {'title': '課程內容', 'text': '', 'tags': '', 'url': '課程內容.html'}, {'title': '第一週', 'text': '建立可攜系統 \n', 'tags': '', 'url': '第一週.html'}, {'title': '第二週', 'text': '', 'tags': '', 'url': '第二週.html'}, {'title': '第三週', 'text': '', 'tags': '', 'url': '第三週.html'}, {'title': '第四週', 'text': '', 'tags': '', 'url': '第四週.html'}, {'title': '第五週', 'text': '\n', 'tags': '', 'url': '第五週.html'}, {'title': '可攜系統', 'text': '', 'tags': '', 'url': '可攜系統.html'}, {'title': '可攜系統製作步驟', 'text': '1.先在C:/中創資料夾 名叫data的新資料夾 為了連接Y:/ \n \n 2.請先至以下網址內下載\xa0  https://www.scintilla.org/SciTEDownload.html \xa0\xa0 如圖下紅框處 \n \n 3.下載完後解壓縮至第一步驟的data \n \n 4.解完壓縮至資料夾中找尋sciTE 如下圖所示 \n \n \n 5.開啟後點選紅框處 \n \n \n \n 6.利用ctrl+f尋找code.page 並修改成下圖所示 \n \n 7.接下來進入\xa0 python3.7.2 \xa0\xa0點選下圖1紅框處 下載下圖2的python \n \n \n \n 圖1如上 \n \n 圖2如上 \n 8.接下來照下面的圖片步驟做就行 \n \n \n \n \n \n \n 9.進入\xa0 C:\\tmp\\p37\\Scripts\xa0 開啟pip.exe 一樣再次利用ctrl+f找尋c:\\p37並改為y:\\p37 如下圖所示 \n \n 10.更改完save起來後就把整個p37資料夾移到步驟一的data資料夾就可以', 'tags': '', 'url': '可攜系統製作步驟.html'}, {'title': 'start的製作', 'text': '利用SciTE製作start.bat檔案\xa0\xa0 內容如下 \n \n', 'tags': '', 'url': 'start的製作.html'}, {'title': 'stop的製作', 'text': '12.利用SciTE製作stop.bat檔案\xa0內容如下 \n', 'tags': '', 'url': 'stop的製作.html'}, {'title': 'Kungit\xa0 製作', 'text': 'Step1. \n Open\xa0 http://mde.tw/wcm2019/content/實習項目 二.html =>Download\xa0\xa0 nodejs_with_ungit.7z \xa0  Put that into  DATA  document \n \n Step2.\xa0 \n Use  SciTE 編輯器  edit \xa0 start_cadlab.bat\xa0 and put\xa0 \n set path8=%Disk%:\\nodejs;%Disk%:\\nodejs\\appdata\\roaming\\npm; \n set USERPROFILE=%Disk%:\\home\xa0 \n %path3%;\xa0 \xa0\xa0 into\xa0\xa0 start_cadlab.bat \n \n \n Step3. \n Use \xa0 SciTE 編輯器 \xa0 add\xa0 \n ungit --launchBrowser=0 --launchCommand "C:\\PROGRA~2\\Google\\Chrome\\Application\\chrome.exe\xa0 %%U"\xa0 save as  kungit.bat \n \n then we put that into Y:\\ \n \n Step4. \n Open your  Koml_2019 star.bat  which place in\xa0 Repositories \xa0 \xa0 \n Just type  kungit  to call this \n \n Done . \n \n', 'tags': '', 'url': 'Kungit\xa0 製作.html'}, {'title': '實習任務', 'text': '', 'tags': '', 'url': '實習任務.html'}, {'title': '實習任務一', 'text': '', 'tags': '', 'url': '實習任務一.html'}, {'title': '建立個人可攜系統', 'text': '組員操作影片 \n 40623152-可攜系統', 'tags': '', 'url': '建立個人可攜系統.html'}, {'title': '實習任務二', 'text': '翻譯 \n 研讀Git 教材重點 \n \n \n', 'tags': '', 'url': '實習任務二.html'}, {'title': 'Git手冊', 'text': '', 'tags': '', 'url': 'Git手冊.html'}, {'title': 'Git 分支', 'text': '幾乎每一種版本控制系統（Version Control System，以下簡稱 VCS）都支援某種形式的分支（branch）功能， 使用分支意味著你可以從開發主線上分離開來，然後在不影響主線的情況下繼續工作。 有人把 Git 的分支模型視為它的「殺手級功能」， 它有何特別之處呢？新建分支的操作幾乎可以在瞬間完成，並且一般來說切換不同分支也很快； 跟其它的 VCS 不一樣的地方是 Git 鼓勵在工作流程中頻繁地使用分支與合併（merge），即使一天之內進行許多次都沒問題。 \n git branch 命令 :建立一個新的分支這會在目前提交上新建一個指標，它並不會切換到這個分支。 \n git checkout 命令 :切換到一個已經存在的分支。 \n *切換分支會修改工作目錄裡的檔案 當你在 Git 中切換分支時，工作目錄內的檔案將會被修改； 如果切換到舊分支，你的工作目錄會回復到看起來就像當初你最後一次在這個分支提交時的樣子。 如果 Git 無法很乾淨地切換過去，它就不會讓你切換過去。 \n git merge 命令 :緊急修正分支進行合併。 \n', 'tags': '', 'url': 'Git 分支.html'}, {'title': 'Git Internals', 'text': '10.1 Plumbing and Porcelain \n Git會創建一個git目錄用於備份或複製 \n Git-Head文件：目前被檢出的分支/Index文件：暫存區信息/Refs目錄：指向數據（分支）/Objects目錄：所有數據內容 \n 10.2 Git Objects \n cat-file：從git取回數據 \n update-ref：更新使用 \n 10.3 Git References \n 執行git branch--cat.git/Head \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0ref：refs/heads/master \n 執行git checkout test--cat.git/Head \n \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ref：refs/heads/test \n Remotes ：git push origin master\xa0：推送上一次分支 \n 10.5 The Refspec \n git push origin ：topic \n git push origin--delete topic \n \n', 'tags': '', 'url': 'Git Internals.html'}]};